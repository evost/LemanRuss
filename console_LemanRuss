#define switchPinA  11
#define switchPinB  12
#define pinAX       A0
#define pinAY       A1
#define pinBX       A2
#define pinBY       A3
#define ledPin      13
#define bounce      32
#define breaking_rc '_'
#define forward_rc  'w'
#define back_rc     's'
#define right_rc    'd'
#define left_rc     'a'
#define forward2_rc '8'
#define back2_rc    '2'
#define right2_rc   '6'
#define left2_rc    '4'
#define gear1_rc    '<'
#define gear2_rc    '>'
#define changmod_rc 'm'
#define changsrv_rc 'z'
int calibrateAX = 512;
int calibrateAY = 512;
int calibrateBX = 512;
int calibrateBY = 512;
int ax = calibrateAX;
int ay = calibrateAY;
int bx = calibrateBX;
int by = calibrateBY;
bool manual = true;
bool servo = false;
bool servofast = false;
char cur_cmd = breaking_rc;
char next_cmd = cur_cmd;
char cur_gear = gear2_rc;
char next_gear = cur_gear;
void setup() {
  pinMode(ledPin, OUTPUT);
  pinMode(switchPinA, INPUT);
  digitalWrite(switchPinA, HIGH);
  pinMode(switchPinB, INPUT);
  digitalWrite(switchPinB, HIGH);
  calibrateAX = analogRead(pinAX);
  calibrateAY = analogRead(pinAY);
  calibrateBX = analogRead(pinBX);
  calibrateBY = analogRead(pinBY);
  Serial.begin(9600);
  while (!Serial);
  while (true) {
    digitalWrite(ledPin, HIGH);
    delay(256);
    digitalWrite(ledPin, LOW);
    delay(256);
    Serial.write('p');
    if (Serial.available()) {
      while (Serial.read() != '1');
      digitalWrite(ledPin, HIGH);
      Serial.write(breaking_rc);
      break;
    }
  }
}
void loop() {
  if (digitalRead(switchPinB) == LOW){
    Serial.write(changsrv_rc);
    servo = !servo;
    while (digitalRead(switchPinB) == LOW);
  }
  if (servo) {
      if (digitalRead(switchPinA) == LOW){
        servofast = !servofast;
        while (digitalRead(switchPinA) == LOW);
      }
      ax = analogRead(pinAX);
      ay = analogRead(pinAY);
      bx = analogRead(pinBX);
      by = analogRead(pinBY);
      /**/ if (ay < calibrateAY - bounce)
        Serial.write(back_rc);
      else if (ay > calibrateAY + bounce)
       Serial.write(forward_rc);
      else if (ax < calibrateAX - bounce)
        Serial.write(left_rc);
      else if (ax > calibrateAX + bounce)
        Serial.write(right_rc);
      else if (by < calibrateBY - bounce)
        Serial.write(back2_rc);
      else if (by > calibrateBY + bounce)
       Serial.write(forward2_rc);
      else if (bx < calibrateBX - bounce)
        Serial.write(left2_rc);
      else if (bx > calibrateBX + bounce)
        Serial.write(right2_rc);
      else 
        Serial.write(breaking_rc);
      if(!servofast)
        delay(16);
  } else {
    if (digitalRead(switchPinA) == LOW) {
      Serial.write(changmod_rc);
      manual = !manual;
      if (manual)
        digitalWrite(ledPin, HIGH);
      else
        digitalWrite(ledPin, LOW);
      while (digitalRead(switchPinA) == LOW);
    }
    if (manual) {
      ax = analogRead(pinAX);
      ay = analogRead(pinAY);
      if ((ax <= calibrateAX - bounce*3) || (ay <= calibrateAY - bounce*3) || (ax >= calibrateAX + bounce*3) || (ay >= calibrateAY + bounce*3))
        next_gear = gear2_rc;
      else
        next_gear = gear1_rc;
      if (next_gear != cur_gear) {
        cur_gear = next_gear;
        Serial.write(cur_gear);
      }
      if (ay < calibrateAY - bounce)
        next_cmd = back_rc;
      else if (ay > calibrateAY + bounce)
        next_cmd = forward_rc;
      else if (ax < calibrateAX - bounce)
        next_cmd = left_rc;
      else if (ax > calibrateAX + bounce)
        next_cmd = right_rc;
      else 
        next_cmd = breaking_rc;
      if (next_cmd != cur_cmd || next_cmd == breaking_rc) {
        cur_cmd = next_cmd;
        Serial.write(cur_cmd);
      }
    }
  }
}